plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'com.palantir.docker' version '0.22.1'

	id "com.google.protobuf" version "0.8.10"
}

group = 'com.coalvalue'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "Hoxton.SR3")
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-freemarker'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-consul-discovery'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	implementation 'org.springframework.cloud:spring-cloud-starter-consul-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.kafka:spring-kafka'
	runtimeOnly 'mysql:mysql-connector-java'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.springframework.security:spring-security-test'
	compile('com.alibaba:fastjson:1.2.8')
	compile("org.apache.commons:commons-lang3:3.3.2")
	implementation('org.springframework.boot:spring-boot-starter-hateoas')
	//compile 'io.github.lognet:grpc-spring-boot-starter:3.4.3'
    compile 'io.grpc:grpc-all:1.24.0'

	implementation 'net.devh:grpc-server-spring-boot-starter:2.7.0.RELEASE'
}


dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}




docker {

	name "$project.group/$project.name:$project.version"
	//tags 'latest'
	dependsOn build
	files jar.archivePath
	//files bootJar
	dockerfile file('src/main/docker/Dockerfile')
	buildArgs([BUILD_VERSION: project.version,JAR_FILE: project.name])
}


protobuf {

	generatedFilesBaseDir = "$projectDir/generated"

	protoc {
		artifact = "com.google.protobuf:protoc:3.7.0"
	}
	plugins {
		grpc {
			artifact = "io.grpc:protoc-gen-grpc-java:1.19.0"

		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {}
		}
	}


}



test {
	// ...
	useJUnitPlatform()
	// explicitly include or exclude tests
	//include '**'
	exclude '**'

	// ...
}
